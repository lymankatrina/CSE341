{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Contacts API",
    "description": "This is a simple CRUD API application created using Node and Express. It was documented using Swagger Autogen and Swagger UI Express",
    "contact": {
      "name": "KatrinaLyman",
      "url": "https://github.com/lymankatrina/CSE341"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Local Host"
    },
    {
      "url": "https://katrina341.onrender.com",
      "description": "Render website"
    }
  ],
  "tags": [
    "Contacts"
  ],
  "paths": {
    "/contacts/": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get all Contacts",
        "description": "Get a list of all contacts in the data collection",
        "operationId": "getAll",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Create a new Contact",
        "description": "Create a new contact by providing all required information",
        "operationId": "postContact",
        "responses": {
          "201": {
            "description": "Contact created successfully."
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "An error occured in the create contact request."
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Contacts"
              },
              "example": {
                "firstName": "John",
                "lastName": "Doe",
                "email": "Johndoe@gmail.com",
                "favoriteColor": "Blue",
                "birthday": "04/22/1999"
              }
            }
          }
        }
      }
    },
    "/contacts/{id}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get one Contact",
        "description": "Get the contact information of one contact by contact ID",
        "operationId": "getSingle",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Contacts"
        ],
        "summary": "Update Contact Information",
        "description": "Update the contact information of one contact by contact ID",
        "operationId": "putContact",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Contact updated successfully."
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "An error occured in the update contact information request."
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Contacts"
              },
              "example": {
                "firstName": "John",
                "lastName": "Doe",
                "email": "Johndoe@gmail.com",
                "favoriteColor": "Blue",
                "birthday": "04/22/1999"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "Delete a Contact",
        "description": "Delete one contact from the data collection by Contact ID.",
        "operationId": "deleteContact",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Contact deleted successfully."
          },
          "500": {
            "description": "An error occured in the delete request."
          }
        }
      }
    },
    "/contacts/{id}/updateEmail": {
      "put": {
        "tags": [
          "Contacts"
        ],
        "summary": "Update Contact Email",
        "description": "Update the Email address of one contact by contact ID",
        "operationId": "putEmail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Email address updated successfully."
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "An error occured in the update email request."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Contacts": {
        "type": "object",
        "properties": {
          "properties": {
            "type": "object",
            "properties": {
              "firstName": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "minLength": {
                    "type": "number",
                    "example": 2
                  },
                  "maxLength": {
                    "type": "number",
                    "example": 20
                  }
                }
              },
              "lastName": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "minLength": {
                    "type": "number",
                    "example": 2
                  },
                  "maxLength": {
                    "type": "number",
                    "example": 20
                  }
                }
              },
              "email": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  }
                }
              },
              "favoriteColor": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "minLength": {
                    "type": "number",
                    "example": 3
                  },
                  "maxLength": {
                    "type": "number",
                    "example": 20
                  }
                }
              },
              "birthday": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  }
                }
              }
            },
            "required": [
              "firstName",
              "lastName",
              "email",
              "favoriteColor",
              "birthday"
            ]
          }
        }
      },
      "examples": {
        "type": "object",
        "properties": {
          "Contacts": {
            "type": "object",
            "properties": {
              "firstName": {
                "type": "string",
                "example": "John"
              },
              "lastName": {
                "type": "string",
                "example": "Doe"
              },
              "email": {
                "type": "string",
                "example": "Johndoe@gmail.com"
              },
              "favoriteColor": {
                "type": "string",
                "example": "Blue"
              },
              "birthday": {
                "type": "string",
                "example": "04/22/1999"
              }
            },
            "required": [
              "firstName",
              "lastName",
              "email",
              "favoriteColor",
              "birthday"
            ]
          }
        }
      }
    }
  }
}